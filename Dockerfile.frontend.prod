# Production Dockerfile f√ºr Frontend (Next.js)
FROM node:18-alpine AS deps
WORKDIR /app

# Copy frontend package files
COPY frontend/package.json ./
RUN npm install --production

FROM node:18-alpine AS builder
WORKDIR /app

# Copy package.json and install ALL dependencies (including dev)
COPY frontend/package.json ./
RUN npm install

# Copy source code
COPY frontend/ ./

# Build-time environment variables for Next.js
ARG NEXT_PUBLIC_API_URL=https://wnn8pretct.eu-central-1.awsapprunner.com
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}

# Build Next.js app
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production
RUN npm run build

# Separate stage to preserve public folder
FROM node:18-alpine AS public-files
WORKDIR /app
COPY frontend/public ./public

FROM node:18-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built files
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
# Copy public folder from separate stage
COPY --from=public-files --chown=nextjs:nodejs /app/public ./public

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"]

